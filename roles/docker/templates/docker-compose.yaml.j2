networks:
  proxy:
    external: true
    name: proxy
  internal_db:
    name: internal_db
    external: true
{% if deployment_env == "dev" %}
    internal: false
{% else %}
    driver: bridge
    internal: true
{% endif %}
  management:
    external: true
    name: management

services:
  portainer:
    image: portainer/portainer-ce:${PORTAINER_VERSION}
    container_name: portainer
    restart: unless-stopped
    labels:
      - homepage.group={{ deployment_env | upper }}
      - homepage.name=Portainer
      - homepage.icon=si-portainer
      - homepage.href=https://portainer.{{ swag_internal_url }}
      - homepage.description=Container management UI
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - {{ global_defaults.app_base_path }}/portainer:/data
    networks:
      - management

  swag-external:
    image: linuxserver/swag:${SWAG_VERSION}
    container_name: swag-external
    cap_add:
      - NET_ADMIN
    labels:
      - homepage.group={{ deployment_env | upper }}
      - homepage.name=Frontend (public)
      - homepage.icon=si-nginx
      - homepage.href=https://{{ swag_external_url }}
      - homepage.description=Public reverse proxy (SWAG)
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL=${SWAG_EXTERNAL_URL}
      - SUBDOMAINS=${SWAG_EXTERNAL_SUBDOMAINS}
      - VALIDATION=${SWAG_EXTERNAL_VALIDATION}
      - DNSPLUGIN=${SWAG_EXTERNAL_DNSPLUGIN}
    volumes:
      - {{ global_defaults.app_base_path }}/swag/external:/config
    ports:
      - "443:443"
      - "80:80"
    restart: unless-stopped
    networks:
      - proxy

  swag-internal:
    image: linuxserver/swag:${SWAG_VERSION}
    container_name: swag-internal
    cap_add:
      - NET_ADMIN
    labels:
      - homepage.group={{ deployment_env | upper }}
      - homepage.name=Gateway (internal)
      - homepage.icon=si-nginx
      - homepage.href=https://portainer.{{ swag_internal_url }}:8443
      - homepage.description=Internal reverse proxy for services
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL=${SWAG_INTERNAL_URL}
      - SUBDOMAINS=${SWAG_INTERNAL_SUBDOMAINS}
      - VALIDATION=${SWAG_INTERNAL_VALIDATION}
      - DNSPLUGIN=${SWAG_INTERNAL_DNSPLUGIN}
    volumes:
      - {{ global_defaults.app_base_path }}/swag/internal:/config
    ports:
      - "8443:443"
    depends_on:
      - portainer
    restart: unless-stopped
    networks:
      - management
      - internal_db
      
{% if deploy_angular_ssr | default(false) %}
  angular-ssr:
    build:
      context: {{ global_defaults.angular_ssr_build_context | default('../angular-ssr') }}
      dockerfile: Dockerfile
    container_name: angular-ssr
    labels:
      - homepage.group={{ deployment_env | upper }}
      - homepage.name=Frontend SSR
      - homepage.icon=mdi-language-typescript
      - homepage.href=https://{{ (deployment_env == 'prod' and (landpage_apex_enabled | default(false))) | ternary('app.' + swag_external_url, swag_external_url) }}
      - homepage.description=Angular SSR app
    expose:
      - "4000"
    networks:
      - proxy
      - internal_db
    restart: unless-stopped
{% endif %}

{% if deploy_landpage | default(false) %}
  landpage:
    image: nginx:alpine
    container_name: landpage
    labels:
      - homepage.group={{ deployment_env | upper }}
      - homepage.name=Landpage
      - homepage.icon=si-nginx
      - homepage.href=https://{{ (deployment_env == 'prod' and (landpage_apex_enabled | default(false))) | ternary(swag_external_url, 'landpage.' + swag_external_url) }}
      - homepage.description=Static landing page
    volumes:
      - {{ global_defaults.app_base_path }}/landpage/html:/usr/share/nginx/html:ro
    expose:
      - "80"
    restart: unless-stopped
    networks:
      - proxy
      - internal_db
{% endif %}


{% if deploy_backend | default(false) %}
  backend:
    build:
      context: {{ global_defaults.backend_build_context | default('../backend') }}
      dockerfile: Dockerfile
    container_name: backend
    labels:
      - homepage.group={{ deployment_env | upper }}
      - homepage.name=Backend API
      - homepage.icon=mdi-nodejs
      - homepage.href=https://backend.{{ swag_internal_url }}:8443
      - homepage.description=Express API service
    env_file:
      - {{ global_defaults.backend_build_context }}/.env
    networks:
      - internal_db
    environment:
      MONGO_URL: "{{ mongo_app_url }}"
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('mongodb').MongoClient.connect(process.env.MONGO_URL).then(()=>process.exit(0)).catch(()=>process.exit(1))\""]
      interval: 10s
      retries: 30
    expose:
      - "3000"
{% if expose_backend_port is defined and expose_backend_port %}
    ports:
      - "3000:3000"
{% endif %}
    restart: unless-stopped
{% endif %}
