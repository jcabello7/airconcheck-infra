---
- name: Wait for mongo primary to come up
  shell: |
    docker exec mongo1 \
      mongosh --quiet --eval "db.runCommand({ ping: 1 }).ok"
  register: mongo_ping
  retries: 30
  delay: 5
  until: mongo_ping.stdout.strip() == "1"
  changed_when: false

- name: Check if replica set is initiated
  shell: |
    docker exec mongo1 mongo --quiet --eval \
      "try { rs.status().ok } catch (e) { print(0) }"
  register: rs_status
  changed_when: false
  failed_when: false

- name: Initiate replica set (if doesn't exist)
  shell: >
    docker exec mongo1 mongo --eval
    'rs.initiate({
        _id: "{{ global_defaults.mongo_replicaset_name }}",
        members: [
          { _id: 0, host: "mongo1:27017" },
          { _id: 1, host: "mongo2:27017" },
          { _id: 2, host: "mongo3:27017" }
        ]
      })'
  when: rs_status.stdout.strip() != "1"

- name: Create PMM user (if doesn't exist)
  shell: >
    docker exec mongo1 mongo admin --eval
    'db.getUser("{{ mongo_pmm_user }}")'
  register: pmm_user
  changed_when: false
  failed_when: false

- name: Create PMM user
  shell: >
    docker exec mongo1 mongo admin --eval
    'db.createUser({
        user:"{{ mongo_pmm_user }}",
        pwd:"{{ mongo_pmm_password }}",
        roles:[
          {role:"clusterMonitor", db:"admin"},
          {role:"read", db:"local"}
        ]})'
  when: pmm_user.stdout == ""